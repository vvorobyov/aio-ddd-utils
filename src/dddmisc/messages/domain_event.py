import typing as t
from uuid import UUID


class DomainEvent:
    timestamp: int   # Autogenerated event created time, can be restored
    reference: UUID  # Domain entity reference created event, can be restored
    ...              # Other data fields

    class Meta:
        is_baseclass: bool  # Base class can't used as event only for make inheritance classes. Isn't inheritable property. By default is False
        domain: str         # Domain name for event. Is inheritable property, and can't be change for inherited classes

    @classmethod
    def load(cls, data: dict):
        """
        Method restore event instance from data dict
        :param data:
        :return:
        """

    @classmethod
    def loads(cls, data: t.Optional[bytes, str]):
        """
        Method restore event instance from json string
        :param data:
        :return:
        """

    def dump(self) -> dict:
        """
        Method dump event to json serialise dict
        :return:
        """

    def dumps(self) -> bytes:
        """
        Method dump event to json string
        :return:
        """
